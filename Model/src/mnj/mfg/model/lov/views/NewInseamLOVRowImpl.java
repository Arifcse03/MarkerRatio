package mnj.mfg.model.lov.views;

import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Sun May 15 15:58:10 BDT 2016
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class NewInseamLOVRowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        Inseam {
            public Object get(NewInseamLOVRowImpl obj) {
                return obj.getInseam();
            }

            public void put(NewInseamLOVRowImpl obj, Object value) {
                obj.setInseam((String)value);
            }
        }
        ,
        Sizeqty {
            public Object get(NewInseamLOVRowImpl obj) {
                return obj.getSizeqty();
            }

            public void put(NewInseamLOVRowImpl obj, Object value) {
                obj.setSizeqty((Number)value);
            }
        }
        ,
        Balncinseamqty {
            public Object get(NewInseamLOVRowImpl obj) {
                return obj.getBalncinseamqty();
            }

            public void put(NewInseamLOVRowImpl obj, Object value) {
                obj.setBalncinseamqty((Number)value);
            }
        }
        ,
        RatioplanId {
            public Object get(NewInseamLOVRowImpl obj) {
                return obj.getRatioplanId();
            }

            public void put(NewInseamLOVRowImpl obj, Object value) {
                obj.setRatioplanId((Number)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(NewInseamLOVRowImpl object);

        public abstract void put(NewInseamLOVRowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    //public static final int BALNCINSEAMQTY1 = AttributesEnum.BalncInseamQty1.index();


    public static final int INSEAM = AttributesEnum.Inseam.index();
    public static final int SIZEQTY = AttributesEnum.Sizeqty.index();
    public static final int BALNCINSEAMQTY = AttributesEnum.Balncinseamqty.index();
    public static final int RATIOPLANID = AttributesEnum.RatioplanId.index();

    /**
     * This is the default constructor (do not remove).
     */
    public NewInseamLOVRowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute Inseam.
     * @return the Inseam
     */
    public String getInseam() {
        return (String) getAttributeInternal(INSEAM);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Inseam.
     * @param value value to set the  Inseam
     */
    public void setInseam(String value) {
        setAttributeInternal(INSEAM, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Sizeqty.
     * @return the Sizeqty
     */
    public Number getSizeqty() {
        return (Number) getAttributeInternal(SIZEQTY);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Sizeqty.
     * @param value value to set the  Sizeqty
     */
    public void setSizeqty(Number value) {
        setAttributeInternal(SIZEQTY, value);
    }


    /**
     * Gets the attribute value for the calculated attribute Balncinseamqty.
     * @return the Balncinseamqty
     */
    public Number getBalncinseamqty() {
        return (Number) getAttributeInternal(BALNCINSEAMQTY);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Balncinseamqty.
     * @param value value to set the  Balncinseamqty
     */
    public void setBalncinseamqty(Number value) {
        setAttributeInternal(BALNCINSEAMQTY, value);
    }


    /**
     * Gets the attribute value for the calculated attribute SizeQty.
     * @return the SizeQty
     */
    public Number getSizeQty() {
        return (Number) getAttributeInternal(SIZEQTY);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute SizeQty.
     * @param value value to set the  SizeQty
     */
    public void setSizeQty(Number value) {
        setAttributeInternal(SIZEQTY, value);
    }


    /**
     * Gets the attribute value for the calculated attribute BalncInseamQty.
     * @return the BalncInseamQty
     */
    public Number getBalncInseamQty() {
        return (Number) getAttributeInternal(BALNCINSEAMQTY);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute BalncInseamQty.
     * @param value value to set the  BalncInseamQty
     */
    public void setBalncInseamQty(Number value) {
        setAttributeInternal(BALNCINSEAMQTY, value);
    }

    /**
     * Gets the attribute value for the calculated attribute RatioplanId.
     * @return the RatioplanId
     */
    public Number getRatioplanId() {
        return (Number) getAttributeInternal(RATIOPLANID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute RatioplanId.
     * @param value value to set the  RatioplanId
     */
    public void setRatioplanId(Number value) {
        setAttributeInternal(RATIOPLANID, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
